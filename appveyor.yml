# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

environment:
  global:
  # overridden on a case by case basis down below
    RUST_VERSION: stable
    CRATE_NAME: smoothly
    OPENSSL_STATIC: 1
    OPENSSL_LIBS: "libssl_static:libcrypto_static"

  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  matrix:
    # MinGW
    # - TARGET: x86_64-pc-windows-gnu
    # - TARGET: i686-pc-windows-gnu

    # MSVC
    - TARGET: x86_64-pc-windows-msvc
      OPENSSL_DIR: "C:\\OpenSSL-v111-Win64"
    - TARGET: i686-pc-windows-msvc
      OPENSSL_DIR: "C:\\OpenSSL-v111-Win32"

install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V

# TODO This is the "test phase", tweak it as you see fit
test_script:
  # we don't run the "test phase" when doing deploys
  - if [%APPVEYOR_REPO_TAG%]==[false] (
      cargo build --target %TARGET% &&
      cargo build --target %TARGET% --release
    )

artifacts:
  - path: target\%TARGET%\debug\smoothly.exe
  - path: target\%TARGET%\release\smoothly.exe

before_deploy:
  # TODO Update this to build the artifacts that matter to you
  - cargo rustc --target %TARGET% --release --bin hello -- -C lto
  - ps: ci\before_deploy.ps1

deploy:
  artifact: /.*\.zip/
  auth_token:
    secure: IzvX9g9lJ01se1ciV/a/hixBq06006r/WKZVC6PgIcDpf5r1t32aox6XSWCUPmmT
  description: ''
  on:
    RUST_VERSION: stable
    appveyor_repo_tag: true
  provider: GitHub

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

branches:
  only:
    # Release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  - provider: Email
    on_build_success: false

# Building is done in the test phase, so we disable Appveyor's build phase.
build: false
